
递归树：分析时间复杂度

动态规划三要素：
* 重叠子问题
* 最优子结构(前提是：子问题相互独立)
* 状态转移方程
    * base case
    * 明确状态(会变化的量)
    * 明确选择
    * dp函数(dp数组的含义)
    * 状态压缩(降维 空间复杂度)
    
# 模板
  初始化 base case
  dp[0][0][...] = base
  进行状态转移
  for 状态1 in 状态1的所有取值：
     for 状态2 in 状态2的所有取值：
        for ...
            dp[状态1][状态2][...] = 求最值(选择1，选择2...)

